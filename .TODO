
lex:
    fix the multi char operator issue:
        != => Ident("!"), Operator::Assign
        == => Operator::Assign, Operator::Assign
parse:
    implement the AST:
        Node. (trait maybe?)
        Node types:
            Condition/body:
                If => ( cond ) , ( body )
                if y { print(y) }
                -> If => ( ToBool(y) ) , ( <insert call tree for print(y)> )
                if y < 10 { y = y + 1; }
                -> If => ( Less => ( y ) , ( 10 ) ) , ( Assign => ( y ) , ( Add => ( y ), ( 1 ) ) )
                if y != 
            Arguments

            Assignment:
                Assign => ( left ) , ( right )
                let x = 10;
                -> Assign => ( x ) , ( 10 )
                let x, y = 10, 11;
                -> Assign => ( x, y ) , ( 10, 11 )
                let x, y, z = 0;
                -> Assign => ( x, y, z ) , ( 0, 0, 0 )
                let x, y, z = 1, 2;
                -> Assign => ( x, y, z ) , ( 1, 2, 2 )

                You get the idea lmfao
            